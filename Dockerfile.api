FROM node:18-slim as base

# To stop yarn install from over-logging.
ENV CI=1

RUN apt-get update || : && apt-get install -y \
    python3 \
    build-essential

RUN yarn cache clean

WORKDIR /app

COPY .yarn/releases .yarn/releases
COPY .yarnrc.yml .yarnrc.yml
COPY .yarn/plugins .yarn/plugins
COPY package.json package.json
COPY api/package.json api/package.json
COPY web/package.json web/package.json
COPY yarn.lock yarn.lock

RUN --mount=type=cache,target=/root/.yarn/berry/cache \
    --mount=type=cache,target=/root/.cache \
    yarn install --immutable --inline-builds

COPY redwood.toml .
COPY graphql.config.js .

# api build
# ------------------------------------------------
FROM base as api_build

COPY api api
RUN node_modules/.bin/redwood build api

# serve api
# ------------------------------------------------
FROM node:18-slim as serve_api

ENV CI=1 \
    NODE_ENV=production

RUN apt-get update || : && apt-get install -y \
    openssl

WORKDIR /app

COPY .yarn/releases .yarn/releases
COPY .yarnrc.yml .yarnrc.yml
COPY .yarn/plugins .yarn/plugins
COPY api/package.json .
COPY yarn.lock yarn.lock

RUN --mount=type=cache,target=/root/.yarn/berry/cache \
    --mount=type=cache,target=/root/.cache \
    yarn workspaces focus api --production

COPY redwood.toml .
COPY graphql.config.js .

COPY --from=api_build /app/api/dist /app/api/dist
COPY --from=api_build /app/api/db /app/api/db
COPY --from=api_build /app/node_modules/.prisma /app/node_modules/.prisma

EXPOSE 8911

CMD [ "node_modules/.bin/rw-server", "api" ]
